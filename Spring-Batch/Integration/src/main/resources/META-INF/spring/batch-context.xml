<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:osgi="http://www.springframework.org/schema/osgi"
    xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd">
 
 	<osgi:reference id="mySqldataSource" interface="javax.sql.DataSource"
		filter="(osgi.jndi.service.name=jdbc/mysqldb)" />
		
 	<bean id="quartz2" class="org.apache.camel.component.quartz2.QuartzComponent"/>
 
 	<!-- JobRepository and JobLauncher -->
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />
 
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>
    
    <!-- ItemReader which reads data from XML file -->
    <bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
 
        <property name="resource" value="classpath:students.xml" />
 
        <property name="fragmentRootElementName" value="Student" />
 
        <property name="unmarshaller">
            <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                <property name="classesToBeBound">
                    <list>
                        <value>com.sahoora.spring.batch.model.Student</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>
 
    <!-- ItemWriter which writes data to database -->
    <bean id="databaseItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="mySqldataSource" />
        <property name="sql">
            <value>
                <![CDATA[        
                    insert into STUDENTS_RESULT(LAST_UPDATED_DATE, STUDENT_NAME, DOB, PERCENTAGE) 
                    values (NOW(), ?, ?, ?)
                ]]>
            </value>
        </property>
 
        <!-- We need a custom setter to handle the conversion between Jodatime LocalDate and MySQL DATE -->
        <property name="ItemPreparedStatementSetter">
            <bean class="com.sahoora.spring.batch.StudentItemPreparedStatementSetter" />
        </property>
  </bean>
 
    <!-- Optional ItemProcessor to perform business logic/filtering on the input records -->
    <bean id="itemProcessor" class="com.sahoora.spring.batch.StudentItemProcessor" />
 
    <!-- Optional JobExecutionListener to perform business logic before and after the job -->
    <bean id="jobListener" class="com.sahoora.spring.batch.StudentJobListener" />
 
    <!-- Step will need a transaction manager -->
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
 
    <!-- Batch Job -->
    <batch:job id="studentJob">
        <batch:step id="step1">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:chunk reader="xmlItemReader" writer="databaseItemWriter"
                    processor="itemProcessor" commit-interval="10" />
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="jobListener" />
        </batch:listeners>
    </batch:job>
 
</beans>   